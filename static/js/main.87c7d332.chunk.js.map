{"version":3,"sources":["corsLink.js","actions/getDataAction.js","reducers/getDataReducer.js","reducers/showProfileReducer.js","reducers/index.js","store.js","Components/Loader/Loader.js","Containers/HomePage/HomePage.js","Components/Preview/Preview.js","Components/Related/Related.js","Components/Profile/Profile.js","Components/Footer/Footer.js","Containers/Main.js","actions/showProfileAction.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getApiData","inputValue","dispatch","url","concat","proxyurl","fetch","then","res","json","console","log","data","songsName","songName","n","title","saveAllSongs","artist","artistId","id","artistName","name","artistImg","picture_medium","audio","preview","showPreview","loader","type","payload","catch","err","setError","test","error","initialState","getDataReducer","state","arguments","length","undefined","action","newState","Object","objectSpread","numAlbums","numFans","showProfileReducer","showProfile","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","Loader","react_default","a","createElement","className","HomePage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","props","updateInputValue","event","target","value","inputEnterSubmit","key","preventDefault","stopPropagation","react","InputGroup","Input","onChange","placeholder","onKeyDown","Button","color","onClick","Components_Loader_Loader","Component","connect","style","backgroundColor","src","alt","Related","_useState","useState","_useState2","slicedToArray","artists","setArtists","_useState3","_useState4","getRelatedArtists","useCallback","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","t0","stop","useEffect","slice","map","picture","nb_fan","Modal","isOpen","modal","Container","ModalHeader","toggle","close","ModalBody","Row","Col","sm","md","lg","bundle_default","controls","Components_Related_Related","Footer","href","rel","Main","getArtistProfileData","prevState","reset","Containers_HomePage_HomePage","Preview_Preview","Components_Profile_Profile","Components_Footer_Footer","artistNumbers","nb_album","getState","App","src_Containers_Main","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87c7d332.chunk.js","sourcesContent":["// using cors-anywhere.herokuapp.com because issues with CORS and without that results from API are not showing\r\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\nmodule.exports = proxyurl;\r\n","import proxyurl from \"../corsLink\";\r\n\r\nexport const getApiData = inputValue => dispatch => {\r\n  const url = `${proxyurl}https://api.deezer.com/search?q=artist:\"${inputValue}\"`;\r\n\r\n  fetch(url)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res);\r\n      const data = res.data[0];\r\n\r\n      // looping through response to save all songs name => saved in 'const songsName'\r\n      const saveAllSongs = res => {\r\n        let songName = \"\";\r\n        for (let n in res.data) {\r\n          const data = res.data[n];\r\n          songName += `${data.title}, `;\r\n        }\r\n        return songName;\r\n      };\r\n\r\n      const songsName = saveAllSongs(res);\r\n\r\n      const artist = {\r\n        artistId: data.artist.id,\r\n        artistName: data.artist.name,\r\n        artistImg: data.artist.picture_medium,\r\n        audio: data.preview,\r\n        songName: songsName,\r\n        showPreview: true,\r\n        loader: false\r\n      };\r\n\r\n      dispatch({\r\n        type: \"GET_API_DATA\",\r\n        payload: artist\r\n      });\r\n    })\r\n    .catch(err => {\r\n      let setError = {};\r\n\r\n      // checking if input field contains only space/spaces OR is empty string\r\n      if (/^\\s+$/.test(inputValue) || inputValue === \"\") {\r\n        setError = {\r\n          error: \"Input field can't be empty!\",\r\n          loader: false\r\n        };\r\n        dispatch({\r\n          type: \"GET_API_DATA\",\r\n          payload: setError\r\n        });\r\n      } else {\r\n        setError = {\r\n          error: `Unable to find ${inputValue}`,\r\n          loader: false\r\n        };\r\n\r\n        dispatch({\r\n          type: \"GET_API_DATA\",\r\n          payload: setError\r\n        });\r\n      }\r\n    });\r\n};\r\n","const initialState = {\r\n  artistName: \"\"\r\n};\r\n\r\nconst getDataReducer = (state = initialState, action) => {\r\n  const newState = { ...state };\r\n\r\n  switch (action.type) {\r\n    case \"GET_API_DATA\":\r\n      console.log(\"GET_API_DATA reducer okinut\");\r\n      return {\r\n        ...newState,\r\n        artistId: action.payload.artistId,\r\n        artistName: action.payload.artistName,\r\n        artistImg: action.payload.artistImg,\r\n        audio: action.payload.audio,\r\n        songName: action.payload.songName,\r\n        error: action.payload.error,\r\n        loader: action.payload.loader,\r\n        showPreview: action.payload.showPreview\r\n      };\r\n    default:\r\n      return newState;\r\n  }\r\n};\r\n\r\nexport default getDataReducer;\r\n","const initialState = {\r\n  numAlbums: 0,\r\n  numFans: 0\r\n};\r\n\r\nconst showProfileReducer = (state = initialState, action) => {\r\n  const newState = { ...state };\r\n\r\n  switch (action.type) {\r\n    case \"SHOW_PROFILE\":\r\n      console.log(\"SHOW_PROFILE reducer okinut\");\r\n      return {\r\n        ...state,\r\n        numAlbums: action.payload.numAlbums,\r\n        numFans: action.payload.numFans,\r\n        showProfile: action.payload.showProfile\r\n      };\r\n    default:\r\n      return newState;\r\n  }\r\n};\r\n\r\nexport default showProfileReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport getDataReducer from \"./getDataReducer\";\r\nimport showProfileReducer from \"./showProfileReducer\";\r\n\r\nexport default combineReducers({\r\n  getDataReducer,\r\n  showProfileReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, compose(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\n\r\nimport \"./Loader.scss\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"lds-roller\">\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getApiData } from \"../../actions/getDataAction\";\r\nimport { InputGroup, Input, Button } from \"reactstrap\";\r\n\r\nimport \"../Main.scss\";\r\n\r\nimport Loader from \"../../Components/Loader/Loader\";\r\n\r\nclass HomePage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      inputValue: \"\",\r\n      loader: false\r\n    };\r\n  }\r\n\r\n  // Main API request\r\n  getApiData = () => {\r\n    this.setState({\r\n      loader: true\r\n    });\r\n\r\n    const inputValue = this.state.inputValue;\r\n    this.props.getApiData(inputValue);\r\n  };\r\n\r\n  // Get input data\r\n  updateInputValue = event => {\r\n    const artistName = event.target.value;\r\n    this.setState({\r\n      inputValue: artistName,\r\n      error: \"\",\r\n      showPreview: false\r\n    });\r\n  };\r\n\r\n  inputEnterSubmit = event => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.getApiData();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <h1 className=\"text-center pb-4\">\r\n          Search for your favorite music artist\r\n        </h1>\r\n        <InputGroup>\r\n          <Input\r\n            value={this.state.inputValue}\r\n            onChange={this.updateInputValue}\r\n            placeholder=\"Type artist name\"\r\n            onKeyDown={this.inputEnterSubmit}\r\n          />\r\n          <Button type=\"submit\" color=\"primary\" onClick={this.getApiData}>\r\n            Search\r\n          </Button>\r\n        </InputGroup>\r\n        {this.state.loader && this.props.loader !== false ? <Loader /> : null}\r\n        <p className=\"error-msg\">{this.props.error}</p>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    error: state.getDataReducer.error,\r\n    loader: state.getDataReducer.loader\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getApiData }\r\n)(HomePage);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Preview.scss\";\r\n\r\nconst ArtistPreview = props => {\r\n  return (\r\n    <div className=\"text-center\" style={{ backgroundColor: \"#f5f5f5\" }}>\r\n      <img\r\n        src={props.artistImg}\r\n        alt={props.artistName}\r\n        onClick={props.showProfile}\r\n        className=\"previewImg\"\r\n      />\r\n      <p className=\"artist-name\">{props.artistName}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    artistId: state.getDataReducer.artistId,\r\n    artistName: state.getDataReducer.artistName,\r\n    artistImg: state.getDataReducer.artistImg\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(ArtistPreview);\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\n\r\nimport \"./Related.scss\";\r\n\r\nimport proxyurl from \"../../corsLink\";\r\n\r\nconst Related = props => {\r\n  // setup state\r\n  const [artists, setArtists] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // setup click handler\r\n  const getRelatedArtists = useCallback(async () => {\r\n    try {\r\n      // fetch data from API\r\n      const url = `${proxyurl}https://api.deezer.com`;\r\n\r\n      const res = await fetch(`${url}/artist/${props.artistId}/related`);\r\n      const json = await res.json();\r\n\r\n      // set state\r\n      setArtists(json.data);\r\n      setError(null);\r\n    } catch (e) {\r\n      console.error(e);\r\n      setError(\"Unable to find related artists\");\r\n    }\r\n  }, [props.artistId]);\r\n\r\n  // Used to automatic display related artists when Component is mounted\r\n  useEffect(() => {\r\n    getRelatedArtists();\r\n  }, []);\r\n\r\n  // setup render helper\r\n  const renderArtist = (artist, key) => {\r\n    return (\r\n      <div key={key} className=\"related-artist-box\">\r\n        <img src={artist.picture} alt={artist.name} className=\"relatedImg\" />\r\n        <p>{artist.name}</p>\r\n        <p>Fans: {artist.nb_fan}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <div>\r\n        <p>Related artists</p>\r\n      </div>\r\n      {error}\r\n      {artists && artists.slice(0, 14).map(renderArtist)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Related;\r\n","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Container, Row, Col, Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport ReactAudioPlayer from \"react-audio-player\";\r\n\r\nimport \"./Profile.scss\";\r\n\r\nimport Related from \"../Related/Related\";\r\n\r\nconst Profile = props => {\r\n  return (\r\n    <div>\r\n      <Modal isOpen={props.modal}>\r\n        <Container>\r\n          <ModalHeader toggle={props.close}>{props.artistName}</ModalHeader>\r\n          <ModalBody>\r\n            <Row>\r\n              <Col sm=\"4\" md=\"5\" lg=\"4\">\r\n                <img\r\n                  src={props.artistImg}\r\n                  alt={props.artistName}\r\n                  className=\"mb-4\"\r\n                />\r\n              </Col>\r\n              <Col sm=\"8\" md=\"7\" lg=\"8\">\r\n                <p>\r\n                  <i className=\"fas fa-users\" title=\"Fans\" />\r\n                  {props.numFans}\r\n                </p>\r\n                <p>\r\n                  <i className=\"fas fa-music\" title=\"Number of albums\" />\r\n                  {props.numAlbums}\r\n                </p>\r\n                <p>\r\n                  <i className=\"fas fa-microphone\" title=\"Songs\" />\r\n                  {props.songName}\r\n                </p>\r\n                <ReactAudioPlayer src={props.audio} controls />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Related artistId={props.artistId} />\r\n            </Row>\r\n          </ModalBody>\r\n        </Container>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    artistId: state.getDataReducer.artistId,\r\n    artistName: state.getDataReducer.artistName,\r\n    artistImg: state.getDataReducer.artistImg,\r\n    audio: state.getDataReducer.audio,\r\n    songName: state.getDataReducer.songName,\r\n    numFans: state.showProfileReducer.numFans,\r\n    numAlbums: state.showProfileReducer.numAlbums\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Profile);\r\n","import React from \"react\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nimport \"./Footer.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <p>All results depends on the Deezer API</p>\r\n        <p>\r\n          Made by{\" \"}\r\n          <a\r\n            href=\"http://www.lukazrnic.com\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Luka Zrnic\r\n          </a>\r\n        </p>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getApiData } from \"../actions/getDataAction\";\r\nimport { showProfile } from \"../actions/showProfileAction\";\r\n\r\nimport { Container } from \"reactstrap\";\r\nimport \"./Main.scss\";\r\n\r\nimport HomePage from \"./HomePage/HomePage\";\r\nimport Preview from \"../Components/Preview/Preview\";\r\nimport Profile from \"../Components/Profile/Profile\";\r\nimport Footer from \"../Components/Footer/Footer\";\r\n\r\nconst initialState = {\r\n  artistId: null,\r\n  modal: false\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  // API request for Artist profile\r\n  getArtistProfileData = () => {\r\n    const artistId = this.props.artistId;\r\n    this.props.showProfile(artistId);\r\n  };\r\n\r\n  showProfile = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n    this.getArtistProfileData();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState(initialState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <section>\r\n          <Container className=\"container-center\">\r\n            <HomePage />\r\n\r\n            {this.props.showPreview ? (\r\n              <Preview showProfile={this.showProfile} />\r\n            ) : null}\r\n\r\n            <Profile\r\n              close={this.reset}\r\n              modal={this.state.modal}\r\n              toggle={this.toggle}\r\n            />\r\n          </Container>\r\n        </section>\r\n        <Footer />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    artistId: state.getDataReducer.artistId,\r\n    showPreview: state.getDataReducer.showPreview,\r\n    showProfile: state.showProfileReducer.showProfile\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getApiData, showProfile }\r\n)(Main);\r\n","import proxyurl from \"../corsLink\";\r\nimport store from \"../store\";\r\n\r\nexport const showProfile = artistId => dispatch => {\r\n  const url = `${proxyurl}https://api.deezer.com/artist/${artistId}`;\r\n\r\n  fetch(url)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      const artistNumbers = {\r\n        numAlbums: res.nb_album,\r\n        numFans: res.nb_fan,\r\n        showProfile: true\r\n      };\r\n\r\n      dispatch({\r\n        type: \"SHOW_PROFILE\",\r\n        payload: artistNumbers\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n\r\n  console.log(store.getState());\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nimport Main from \"./Containers/Main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Main />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./index.css\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}